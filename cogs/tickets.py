import disnake
from disnake.ext import commands
from datetime import datetime

class TicketSystem(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.ticket_channel_id = 1239181525862453318
        self.mod_role_id = 1239181262753890305
        self.ticket_category_id = 1239181486775603232
        self.tickets = {}
        self.mod_role = None


    @commands.Cog.listener()
    async def on_ready(self):
        self.ticket_channel = self.bot.get_channel(self.ticket_channel_id)
        self.ticket_category = self.bot.get_channel(self.ticket_category_id)
        guild = self.ticket_channel.guild
        self.mod_role = guild.get_role(self.mod_role_id)
        await self.create_ticket_button()


    async def create_ticket_button(self):
        async for message in self.ticket_channel.history(limit=100):
            if message.author == self.bot.user and message.embeds and any(item.custom_id == "create_ticket_button" for item in message.components[0].children):
                return

        embed = disnake.Embed(
            title="–¢—ñ–∫–µ—Ç-—Å–∏—Å—Ç–µ–º–∞",
            description="–¢—ñ–∫–µ—Ç-—Å–∏—Å—Ç–µ–º–∞ ‚Äì —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –º—ñ–∂ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ —Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏. –ó–≤–µ—Ä—Ç–∞—é—á–∏—Å—å –¥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤ –∑ –ø–∏—Ç–∞–Ω–Ω—è–º, –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—î—é –∞–±–æ –ø—Ä–æ–±–ª–µ–º–æ—é, –≤–∏ –º–æ–∂–µ—Ç–µ –æ—á—ñ–∫—É–≤–∞—Ç–∏ –Ω–∞ —à–≤–∏–¥–∫—É —Ä–µ–∞–∫—Ü—ñ—é.\n\n**–©–æ–± –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ç—ñ–∫–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º ‚Äì –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ!**",
            color=0x007FFF
        )
        button = disnake.ui.Button(label="üí¨ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç", style=disnake.ButtonStyle.primary, custom_id="create_ticket_button")
        await self.ticket_channel.send(embed=embed, view=disnake.ui.View().add_item(button))


    @commands.Cog.listener()
    async def on_button_click(self, interaction: disnake.MessageInteraction):
        if interaction.component.custom_id == "create_ticket_button":
            await self.create_ticket_callback(interaction)
        elif interaction.component.custom_id.startswith("close_ticket_button"):
            await self.close_ticket_callback(interaction)


    async def create_ticket_callback(self, interaction):
        if interaction.user.id in self.tickets:
            await interaction.response.send_message(f"**‚ùå –ü–æ–º–∏–ª–∫–∞**: –£ –≤–∞—Å –≤–∂–µ —î –∞–∫—Ç–∏–≤–Ω–∏–π —Ç—ñ–∫–µ—Ç. –ó–∞–∫—Ä–∏–π—Ç–µ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç—ñ–∫–µ—Ç, –ø–µ—Ä—à –Ω—ñ–∂ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π.", ephemeral=True)
            return

        ticket_number = len(self.tickets) + 1
        ticket_channel = await self.ticket_category.create_text_channel(f"TICKET-#{ticket_number:03d}")
        self.tickets[interaction.user.id] = ticket_channel
        overwrites = {
            interaction.guild.default_role: disnake.PermissionOverwrite(read_messages=False),
            interaction.user: disnake.PermissionOverwrite(read_messages=True, send_messages=True),
            self.mod_role: disnake.PermissionOverwrite(read_messages=True, send_messages=True)
        }
        await ticket_channel.edit(overwrites=overwrites)
        await self.create_delete_button(ticket_channel, ticket_number, interaction.user)
        await interaction.response.send_message(f"üí≠ **–¢—ñ–∫–µ—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π!** –†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –≤ –∫–∞–Ω–∞–ª—ñ {ticket_channel.mention}", ephemeral=True)


    async def create_delete_button(self, ticket_channel, ticket_number, user):
        embed = disnake.Embed(
            title=f"–¢—ñ–∫–µ—Ç #{ticket_number}",
            color=0x007FFF,
            description=f"**–¢—ñ–∫–µ—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π.** \n–¢–µ–ø–µ—Ä, –∑–∞–ª–∏—à—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–∏ –∂–∞–ª–æ–±—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º (–∞–±–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤) —Ç–∞ —á–µ–∫–∞–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑–∞–¥–æ–≤—ñ–ª—å–Ω–∞ - –±—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–∫—Ä–∏–π—Ç–µ —Ç—ñ–∫–µ—Ç. –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –≤–∞—Å –Ω–µ –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—î - –∑–≥–∞–¥–∞–π—Ç–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É —á–∞—Ç—ñ —Ç—ñ–∫–µ—Ç—É. \n\n**–í—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫:** {user.mention}\n**–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        )
        button = disnake.ui.Button(label="üí• –ó–∞–∫—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç", style=disnake.ButtonStyle.danger)
        button.callback = self.close_ticket_callback
        await ticket_channel.send(embed=embed, content="", view=disnake.ui.View().add_item(button))


    async def close_ticket_callback(self, interaction):
        ticket_channel = interaction.channel
        if ticket_channel.category_id == self.ticket_category_id:
            if interaction.user.id in self.tickets:
                ticket_number = int(ticket_channel.name.split('-')[1])
                await ticket_channel.edit(name=f"{ticket_channel.name}-closed")
                del self.tickets[interaction.user.id]
                overwrites = {
                    interaction.guild.default_role: disnake.PermissionOverwrite(read_messages=False),
                    interaction.user: disnake.PermissionOverwrite(read_messages=True, send_messages=False),
                    self.mod_role: disnake.PermissionOverwrite(read_messages=True, send_messages=True)
                }
                await ticket_channel.edit(overwrites=overwrites)
                await interaction.response.send_message(f"üíå **–¢—ñ–∫–µ—Ç #{ticket_number} –∑–∞–∫—Ä–∏—Ç–æ!** –°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∑–∞–¥–æ–≤—ñ–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –Ω–∞—à–∏—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤!", ephemeral=True)
            else:
                await interaction.response.send_message(f"**‚ùå –ü–æ–º–∏–ª–∫–∞**: –ó–¥–∞—î—Ç—å—Å—è, —â–æ –í–∏ –≤–∂–µ –∑–∞–∫—Ä–∏–ª–∏ —Ç—ñ–∫–µ—Ç –∞–±–æ –≤—ñ–Ω –Ω–µ –Ω–∞–ª–µ–∂–∏—Ç—å –≤–∞–º.", ephemeral=True)
        else:
            await interaction.response.send_message(f"**‚ùå –ü–æ–º–∏–ª–∫–∞**: –¶–µ –Ω–µ –∫–∞–Ω–∞–ª –¥–ª—è —Ç—ñ–∫–µ—Ç—É!", ephemeral=True)


def setup(bot):
    print("Loading Tickets cog...")
    bot.add_cog(TicketSystem(bot))
