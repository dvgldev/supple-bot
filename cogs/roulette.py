import disnake
from disnake.ext import commands
from sqlalchemy import Column, Integer, String, Float, DateTime, ForeignKey, create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship, sessionmaker
from sqlalchemy import create_engine
import random

Base = declarative_base()

class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    discord_id = Column(String, unique=True)
    username = Column(String)
    balance = Column(Float, default=100)
    last_played = Column(DateTime, nullable=True)

DATABASE_URL = "sqlite:///testbot.db"
engine = create_engine(DATABASE_URL)
Session = sessionmaker(bind=engine)
Base.metadata.create_all(engine)

CHANNEL_ID = 1258328820600012800

class RouletteBetModal(disnake.ui.Modal):
    def __init__(self, user, bot):
        components = [
            disnake.ui.TextInput(
                label="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É —Å—Ç–∞–≤–∫—É",
                custom_id="bet_amount",
                style=disnake.TextInputStyle.short,
                min_length=1,
                max_length=5
            ),
            disnake.ui.TextInput(
                label="–¢–∏–ø —Å—Ç–∞–≤–∫–∏ (üî¥, ‚ö´, üü¢, —á–∏—Å–ª–æ 1-36)",
                custom_id="bet_type",
                style=disnake.TextInputStyle.short,
                min_length=1,
                max_length=10
            )
        ]
        super().__init__(title="–ó—Ä–æ–±–∏—Ç–∏ —Å—Ç–∞–≤–∫—É –Ω–∞ —Ä—É–ª–µ—Ç–∫—É", components=components)
        self.bot = bot

    async def callback(self, interaction: disnake.ModalInteraction):
        amount_input = interaction.text_values["bet_amount"]
        bet_type = interaction.text_values["bet_type"].lower()

        try:
            amount = float(amount_input)
        except ValueError:
            await interaction.response.send_message("**‚ùå –ü–æ–º–∏–ª–∫–∞:** –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É —Å—É–º—É.", ephemeral=True)
            return

        if amount < 150 or amount > 5000:
            await interaction.response.send_message("**‚ùå –ü–æ–º–∏–ª–∫–∞:** –°—Ç–∞–≤–∫–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤—ñ–¥ 150 –¥–æ 5000 T-COINS.", ephemeral=True)
            return

        session = Session()
        discord_id = str(interaction.author.id)
        user = session.query(User).filter_by(discord_id=discord_id).first()
        if user is None:
            user = User(discord_id=discord_id, username=interaction.author.display_name)
            session.add(user)
            session.commit()

        if user.balance < amount:
            await interaction.response.send_message("**‚ùå –ü–æ–º–∏–ª–∫–∞:** –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏.", ephemeral=True)
            session.close()
            return

        result = self.play_roulette()
        result_color = self.get_color(result)
        payout = self.calculate_payout(bet_type, result)

        if payout > 0:
            user.balance += amount * payout
            result_message = f"**üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏!** –†–µ–∑—É–ª—å—Ç–∞—Ç: {result} {result_color}. –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ {bet_type} –ø—Ä–∏–Ω–µ—Å–ª–∞ –í–∞–º **{amount * payout}** T-COINS. –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: **{user.balance}** T-COINS."
            print(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.username} –ø–µ—Ä–µ–º—ñ–≥ –¥–∏–ª–µ—Ä–∞ —É —Ä—É–ª–µ—Ç–∫—É —Ç–∞ –æ—Ç—Ä–∏–º–∞–≤ {amount} T-COINS. –†–µ–∑—É–ª—å—Ç–∞—Ç: {result} {result_color}. –ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.balance} T-COINS.")
        else:
            user.balance -= amount
            result_message = f"**‚ùå –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏.** –†–µ–∑—É–ª—å—Ç–∞—Ç: {result} {result_color}. –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ {bet_type} –Ω–µ –ø—Ä–∏–Ω–µ—Å–ª–∞ –≤–∏–≥—Ä–∞—à—É. –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: **{user.balance}** T-COINS."
            print(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.username} –ø—Ä–æ–≥—Ä–∞–≤ –¥–∏–ª–µ—Ä—É —É —Ä—É–ª–µ—Ç–∫—É —Ç–∞ –≤—Ç—Ä–∞—Ç–∏–≤ {amount} T-COINS. –†–µ–∑—É–ª—å—Ç–∞—Ç: {result} {result_color}. –ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.balance} T-COINS.")

        session.commit()
        await interaction.response.send_message(result_message, ephemeral=True)

    def play_roulette(self):
        return random.randint(0, 36)

    def get_color(self, result):
        red_numbers = {1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36}
        black_numbers = {2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35}
        if result in red_numbers:
            return "—á–µ—Ä–≤–æ–Ω–µ"
        elif result in black_numbers:
            return "—á–æ—Ä–Ω–µ"
        else:
            return "–∑–µ–ª–µ–Ω–µ"

    def calculate_payout(self, bet_type, result):
        red_numbers = {1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36}
        black_numbers = {2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35}

        if bet_type == "—á–µ—Ä–≤–æ–Ω–µ" and result in red_numbers:
            return 1
        elif bet_type == "—á–æ—Ä–Ω–µ" and result in black_numbers:
            return 1
        elif bet_type.isdigit() and int(bet_type) == result:
            return 36
        else:
            return 0


class StartRouletteView(disnake.ui.View):
    def __init__(self, bot):
        super().__init__(timeout=None)
        self.bot = bot

    @disnake.ui.button(label="–ì—Ä–∞—Ç–∏", style=disnake.ButtonStyle.success)
    async def start_game(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        session = Session()
        discord_id = str(interaction.author.id)
        user = session.query(User).filter_by(discord_id=discord_id).first()
        if user is None:
            user = User(discord_id=discord_id, username=interaction.author.display_name)
            session.add(user)
            session.commit()

        await interaction.response.send_modal(RouletteBetModal(user, self.bot))


class Roulette(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        channel = self.bot.get_channel(CHANNEL_ID)

        messages = await channel.history(limit=10).flatten()
        for message in messages:
            if message.author == self.bot.user:
                await message.delete()

        embed = disnake.Embed(
            title=":slot_machine: –†—É–ª–µ—Ç–∫–∞",
            description="```\n–†—É–ª–µ—Ç–∫–∞ ‚Äî –∞–∑–∞—Ä—Ç–Ω–∞ –≥—Ä–∞, —â–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î —Å–æ–±–æ—é –∫–æ–ª–µ—Å–æ, —â–æ –æ–±–µ—Ä—Ç–∞—î—Ç—å—Å—è –∑ 36 —Å–µ–∫—Ç–æ—Ä–∞–º–∏ —á–µ—Ä–≤–æ–Ω–æ–≥–æ —ñ —á–æ—Ä–Ω–æ–≥–æ –∫–æ–ª—å–æ—Ä—ñ–≤ —ñ 37-–º –∑–µ–ª–µ–Ω–∏–º —Å–µ–∫—Ç–æ—Ä–æ–º ¬´–∑–µ—Ä–æ¬ª –∑ –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è–º –Ω—É–ª—è. –ì—Ä–∞–≤—Ü—ñ, —è–∫—ñ –≥—Ä–∞—é—Ç—å —É —Ä—É–ª–µ—Ç–∫—É, –º–æ–∂—É—Ç—å –∑—Ä–æ–±–∏—Ç–∏ —Å—Ç–∞–≤–∫—É –Ω–∞ –≤–∏–ø–∞–¥–∞–Ω–Ω—è –∫—É–ª—å–∫–∏ –Ω–∞ –∫–æ–ª—ñ—Ä (—á–µ—Ä–≤–æ–Ω–µ –∞–±–æ —á–µ—Ä–≤–æ–Ω–µ) –∞–±–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ —á–∏—Å–ª–æ. –ö—Ä—É–ø'—î –∑–∞–ø—É—Å–∫–∞—î –∫—É–ª—å–∫—É –Ω–∞–¥ –∫–æ–ª–µ—Å–æ–º —Ä—É–ª–µ—Ç–∫–∏, —è–∫–∏–π —Ä—É—Ö–∞—î—Ç—å—Å—è —É–±—ñ–∫, –ø—Ä–æ—Ç–∏–ª–µ–∂–Ω–∏–π –æ–±–µ—Ä—Ç–∞–Ω–Ω—é –∫–æ–ª–µ—Å–∞ —Ä—É–ª–µ—Ç–∫–∏, —ñ –≤—Ä–µ—à—Ç—ñ-—Ä–µ—à—Ç –≤–∏–ø–∞–¥–∞—î –Ω–∞ –æ–¥–∏–Ω —ñ–∑ —Å–µ–∫—Ç–æ—Ä—ñ–≤. –í–∏–≥—Ä–∞—à—ñ –æ—Ç—Ä–∏–º—É—é—Ç—å —É—Å—ñ, —á–∏—è —Å—Ç–∞–≤–∫–∞ –∑—ñ–≥—Ä–∞–ª–∞.\n\n–î–ª—è —Ç–æ–≥–æ, —â–æ–± –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–∏–ø —Å—Ç–∞–≤–∫–∏ - –≤–≤–æ–¥—ñ—Ç—å —É –ø–æ–ª–µ —Å–ª–æ–≤–æ '—á–µ—Ä–≤–æ–Ω–µ', '—á–æ—Ä–Ω–µ' –∞–±–æ '–∑–µ–ª–µ–Ω–µ'. –Ø–∫—â–æ –í–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ –∑—Ä–æ–±–∏—Ç–∏ —Å—Ç–∞–≤–∫—É –Ω–∞ —á–∏—Å–ª–æ - –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ, –±–µ–∑ –∫–æ–ª—å–æ—Ä—É.```",
            color=disnake.Color.green()
        )
        embed.add_field(name="**–ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ —Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ñ —Å—Ç–∞–≤–∫–∏:**", value="150 - 5000 T-COINS.", inline=False)
        embed.add_field(name="**–ü—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏ —É —Ä—É–ª–µ—Ç–∫—É:**", value=f"[–ö–ª—ñ–∫ —Å—é–¥–∏](https://uk.wikipedia.org/wiki/%D0%90%D0%BC%D0%B5%D1%80%D0%B8%D0%BA%D0%B0%D0%BD%D1%81%D1%8C%D0%BA%D0%B0_%D1%80%D1%83%D0%BB%D0%B5%D1%82%D0%BA%D0%B0#:~:text=%D0%BE%D1%82%D1%80%D0%B8%D0%BC%D1%83%D1%8E%D1%82%D1%8C%20%D1%81%D0%B2%D0%BE%D1%97%20%D0%B2%D0%B8%D0%B3%D1%80%D0%B0%D1%88%D1%96.-,%D0%A1%D1%82%D0%B0%D0%B2%D0%BA%D0%B8%20%D0%B2%20%D0%B0%D0%BC%D0%B5%D1%80%D0%B8%D0%BA%D0%B0%D0%BD%D1%81%D1%8C%D0%BA%D1%96%D0%B9%20%D1%80%D1%83%D0%BB%D0%B5%D1%82%D1%86%D1%96,-%5B%D1%80%D0%B5%D0%B4.)", inline=False)
        embed.set_image(url="https://img.freepik.com/premium-vector/european-casino-roulette-scheme-layout-table-template-design-online-game-vector-illustration-isolated-green-background_529424-35.jpg")
        embed.set_footer(text="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ì—Ä–∞—Ç–∏', —â–æ–± –ø–æ—á–∞—Ç–∏ –≥—Ä—É.")

        await channel.send(embed=embed)
        await channel.send(view=StartRouletteView(self.bot))


def setup(bot):
    print("Loading Roulette cog...")
    bot.add_cog(Roulette(bot))