import disnake
from disnake.ext import commands
from datetime import datetime, timedelta
import aiohttp

EVENT_TEMPLATES = {
    "chess": {
        "event_name": "–®–∞—Ö–∏ ‚ôü",
        "description": "–®–∞—Ö–∏ - —Ü–µ –≥—Ä–∞, —è–∫–∞ –≥—Ä–∞—î—Ç—å—Å—è –º—ñ–∂ –¥–≤–æ–º–∞ —Å—É–ø–µ—Ä–Ω–∏–∫–∞–º–∏ –Ω–∞ –ø—Ä–æ—Ç–∏–ª–µ–∂–Ω–∏—Ö —Å—Ç–æ—Ä–æ–Ω–∞—Ö –¥–æ—à–∫–∏, —â–æ –º—ñ—Å—Ç–∏—Ç—å 64 –∫–≤–∞–¥—Ä–∞—Ç–∏, —è–∫—ñ —á–µ—Ä–≥—É—é—Ç—å—Å—è –∑–∞ –∫–æ–ª—å–æ—Ä–∞–º–∏. –ö–æ–∂–µ–Ω –≥—Ä–∞–≤–µ—Ü—å –º–∞—î 16 —Ñ—ñ–≥—É—Ä: 1 –∫–æ—Ä–æ–ª—å, 1 —Ñ–µ—Ä–∑—å, 2 —Ç—É—Ä–∏, 2 –∫–æ–Ω—è, 2 —Å–ª–æ–Ω–∞ —ñ 8 –ø—ñ—à–∞–∫—ñ–≤. –ú–µ—Ç–∞ –≥—Ä–∏ –ø–æ–ª—è–≥–∞—î –≤ —Ç–æ–º—É, —â–æ–± –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ —à–∞—Ö —ñ –º–∞—Ç —ñ–Ω—à–æ–º—É –∫–æ—Ä–æ–ª—é.",
        "rules_link": "https://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0_%D1%88%D0%B0%D1%85%D1%96%D0%B2",
        "cover_image": "https://media.cnn.com/api/v1/images/stellar/prod/230104173032-02-chess-stock.jpg?c=16x9&q=h_833,w_1480,c_fill"
    },
    "mafia": {
        "event_name": "–ú–∞—Ñ—ñ—è üê±‚Äçüë§",
        "description": "–ú–∞—Ñ—ñ—è ‚Äî —Ü–µ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ-–ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø–æ–∫—Ä–æ–∫–æ–≤–∞ —Ä–æ–ª—å–æ–≤–∞ –≥—Ä–∞ —É –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–º—É –∂–∞–Ω—Ä—ñ, —è–∫–∞ –º–æ–¥–µ–ª—é—î –±–æ—Ä–æ—Ç—å–±—É –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤–∞–Ω–æ—ó –º–µ–Ω—à–æ—Å—Ç—ñ –ø—Ä–æ—Ç–∏ –Ω–µ–æ—Ä–≥–∞–Ω—ñ–∑–æ–≤–∞–Ω–æ—ó –±—ñ–ª—å—à–æ—Å—Ç—ñ. –ó–∞ —Å—é–∂–µ—Ç–æ–º –º–µ—à–∫–∞–Ω—Ü—ñ –º—ñ—Å—Ç–∞, –∑–Ω–µ—Å–∏–ª–µ–Ω—ñ –≤—ñ–¥ —Ä–æ–∑–≥—É–ª—É –º–∞—Ñ—ñ—ó, –ø—Ä–∏–π–º–∞—é—Ç—å —Ä—ñ—à–µ–Ω–Ω—è –ø–æ—Å–∞–¥–∏—Ç–∏ –¥–æ –≤'—è–∑–Ω–∏—Ü—ñ –≤—Å—ñ—Ö –∑–ª–æ—á–∏–Ω—Ü—ñ–≤ –¥–æ –æ–¥–Ω–æ–≥–æ; —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—Ñ—ñ—è —Ä–æ–∑–ø–æ—á–∏–Ω–∞—î –≤—ñ–π–Ω—É –¥–æ –ø–æ–≤–Ω–æ–≥–æ –∑–Ω–∏—â–µ–Ω–Ω—è –º–∏—Ä–Ω–∏—Ö –∂–∏—Ç–µ–ª—ñ–≤.",
        "rules_link": "https://uk.wikipedia.org/wiki/%D0%9C%D0%B0%D1%84%D1%96%D1%8F_(%D0%B3%D1%80%D0%B0)#%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0_%D0%B3%D1%80%D0%B8",
        "cover_image": "https://t4.ftcdn.net/jpg/06/77/76/95/360_F_677769566_H6alHNhQge3DWcZT2H4x7e44y0i0ePv1.jpg"
    }
}

class Events(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.event_channel_id = 1238540131154006089
        self.role_id = 1238819567669874710

    @commands.slash_command(name="create_event", description="–°—Ç–≤–æ—Ä–∏—Ç–∏ —ñ–≤–µ–Ω—Ç.")
    async def create_event(
        self,
        ctx,
        template_id: str = "chess",
        date_time: str = None,
    ):
        event_template = EVENT_TEMPLATES.get(template_id, EVENT_TEMPLATES["chess"])

        event_name = event_template["event_name"]
        description = event_template["description"]
        rules_link = event_template["rules_link"]
        cover_image = event_template["cover_image"]
        organizer_avatar = ctx.author.avatar.url if ctx.author.avatar else disnake.Embed.Empty
        organizer_name = ctx.author.display_name
        role_mention = ctx.guild.get_role(self.role_id).mention

        embed = disnake.Embed(title=f"{event_name}", color=0x007FFF)
        embed.description = f"```\n{description}\n```"
        embed.add_field(name="–î–∞—Ç–∞ —Ç–∞ —á–∞—Å:", value=f"{date_time}", inline=True)
        embed.add_field(name="\u200b", value="\u200b", inline=True)
        embed.add_field(name="–ü—Ä–∞–≤–∏–ª–∞:", value=f"[–ö–ª—ñ–∫ —Å—é–¥–∏]({rules_link})\n", inline=True)
        embed.set_image(url=cover_image)
        embed.set_footer(text=f"–û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä: {organizer_name}", icon_url=organizer_avatar)

        start_time = datetime.strptime(date_time, '%Y-%m-%d %H:%M')
        end_time = start_time + timedelta(hours=1)

        async with aiohttp.ClientSession() as session:
            async with session.get(cover_image) as response:
                image_data = await response.read()

        scheduled_event = await ctx.guild.create_scheduled_event(
            name=event_name,
            description=description,
            scheduled_start_time=start_time,
            scheduled_end_time=end_time,
            entity_type=disnake.GuildScheduledEventEntityType.external,
            entity_metadata=disnake.GuildScheduledEventMetadata(location=f"<#{1239168161132187740}>"),
            image=image_data
        )

        channel = self.bot.get_channel(self.event_channel_id)
        if channel:
            await channel.send(f"{role_mention}", embed=embed)
            ephemeral_message = f"‚ú® **–Ü–≤–µ–Ω—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π!** –†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –≤ –∫–∞–Ω–∞–ª—ñ <#{self.event_channel_id}> —Ç–∞ —É —Å–ø–∏—Å–∫—É –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö –ø–æ–¥—ñ–π."
            await ctx.send(ephemeral_message, ephemeral=True)
        else:
            await ctx.send("**‚ùå –ü–æ–º–∏–ª–∫–∞:** –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —ñ–≤–µ–Ω—Ç—ñ–≤.")


def setup(bot):
    print("Loading Events cog...")
    bot.add_cog(Events(bot))
